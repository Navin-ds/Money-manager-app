{"version":3,"sources":["components/TransactionItem/index.js","components/MoneyDetails/index.js","components/MoneyManager/index.js","App.js","index.js"],"names":["TransactionItem","props","transactionDetails","deleteTransaction","id","title","amount","type","className","onClick","testid","src","alt","MoneyDetails","balanceAmount","incomeAmount","expensesAmount","transactionTypeOptions","optionId","displayText","MoneyManager","state","transactionsList","titleInput","amountInput","updatedTransactionList","filter","eachTransaction","setState","onAddTransaction","event","preventDefault","find","newTransaction","v4","parseInt","prevState","onChangeOptionID","target","value","onChangeAmountInput","onChangeTitleInput","calculateExpenses","forEach","calculateIncome","calculateBalance","this","onSubmit","htmlFor","onChange","placeholder","map","eachOption","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c107918c.chunk.js","sourcesContent":["// Write your code here\nimport './index.css'\n\nconst TransactionItem = props => {\n  const {transactionDetails, deleteTransaction} = props\n\n  const {id, title, amount, type} = transactionDetails\n\n  const onDeleteTransaction = () => {\n    deleteTransaction(id)\n  }\n\n  return (\n    <li className=\"table-row\">\n      <p className=\"transaction-text\">{title}</p>\n      <p className=\"transaction-text\">Rs {amount}</p>\n      <p className=\"transaction-text\">{type}</p>\n      <div className=\"delete-container\">\n        <button\n          className=\"delete-button\"\n          type=\"button\"\n          onClick={onDeleteTransaction}\n          testid=\"delete\"\n        >\n          <img\n            className=\"delete-icon\"\n            src=\"https://assets.ccbp.in/frontend/react-js/money-manager/delete.png\"\n            alt=\"delete\"\n          />\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default TransactionItem\n","// Write your code here\nimport './index.css'\n\nconst MoneyDetails = props => {\n  const {balanceAmount, incomeAmount, expensesAmount} = props\n\n  return (\n    <div className=\"money-details-container\">\n      <div className=\"balance-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/balance-image.png\"\n          alt=\"balance\"\n          className=\"icon\"\n        />\n        <div className=\"details-content\">\n          <p className=\"details-text\">Your Balance</p>\n          <p className=\"details-money\" testid=\"balanceAmount\">\n            Rs {balanceAmount}\n          </p>\n        </div>\n      </div>\n      <div className=\"income-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/income-image.png\"\n          alt=\"income\"\n          className=\"icon\"\n        />\n        <div className=\"details-content\">\n          <p className=\"details-text\">Your Income</p>\n          <p className=\"details-money\" testid=\"incomeAmount\">\n            Rs {incomeAmount}\n          </p>\n        </div>\n      </div>\n      <div className=\"expenses-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/money-manager/expenses-image.png\"\n          alt=\"expenses\"\n          className=\"icon\"\n        />\n        <div className=\"details-content\">\n          <p className=\"details-text\">Your Expenses</p>\n          <p className=\"details-money\" testid=\"expensesAmount\">\n            Rs {expensesAmount}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MoneyDetails\n","import {Component} from 'react'\nimport {v4} from 'uuid'\n\nimport TransactionItem from '../TransactionItem'\nimport MoneyDetails from '../MoneyDetails'\n\nimport './index.css'\n\nconst transactionTypeOptions = [\n  {\n    optionId: 'INCOME',\n    displayText: 'Income',\n  },\n  {\n    optionId: 'EXPENSES',\n    displayText: 'Expenses',\n  },\n]\n\n// Write your code here\n\nclass MoneyManager extends Component {\n  state = {\n    transactionsList: [],\n    titleInput: '',\n    amountInput: '',\n    optionId: transactionTypeOptions[0].optionId,\n  }\n\n  deleteTransaction = id => {\n    const {transactionsList} = this.state\n    const updatedTransactionList = transactionsList.filter(\n      eachTransaction => id !== eachTransaction.id,\n    )\n    this.setState({\n      transactionsList: updatedTransactionList,\n    })\n  }\n\n  onAddTransaction = event => {\n    event.preventDefault()\n    const {titleInput, amountInput, optionId} = this.state\n\n    const typeOption = transactionTypeOptions.find(\n      eachTransaction => eachTransaction.optionId === optionId,\n    )\n\n    const {displayText} = typeOption\n\n    const newTransaction = {\n      id: v4(),\n      title: titleInput,\n      amount: parseInt(amountInput),\n      type: displayText,\n    }\n\n    this.setState(prevState => ({\n      transactionsList: [...prevState.transactionsList, newTransaction],\n      titleInput: '',\n      amountInput: '',\n      optionId: transactionTypeOptions[0].optionId,\n    }))\n  }\n\n  onChangeOptionID = event => {\n    this.setState({optionId: event.target.value})\n  }\n\n  onChangeAmountInput = event => {\n    this.setState({amountInput: event.target.value})\n  }\n\n  onChangeTitleInput = event => {\n    this.setState({titleInput: event.target.value})\n  }\n\n  calculateExpenses = () => {\n    const {transactionsList} = this.state\n    let expensesAmount = 0\n    transactionsList.forEach(eachTransaction => {\n      if (eachTransaction.type === transactionTypeOptions[1].displayText) {\n        expensesAmount += eachTransaction.amount\n      }\n    })\n\n    return expensesAmount\n  }\n\n  calculateIncome = () => {\n    const {transactionsList} = this.state\n    let incomeAmount = 0\n    transactionsList.forEach(eachTransaction => {\n      if (eachTransaction.type === transactionTypeOptions[0].displayText) {\n        incomeAmount += eachTransaction.amount\n      }\n    })\n\n    return incomeAmount\n  }\n\n  calculateBalance = () => {\n    const {transactionsList} = this.state\n    let balanceAmount = 0\n    let incomeAmount = 0\n    let expensesAmount = 0\n\n    transactionsList.forEach(eachTransaction => {\n      if (eachTransaction.type === transactionTypeOptions[0].displayText) {\n        incomeAmount += eachTransaction.amount\n      } else {\n        expensesAmount += eachTransaction.amount\n      }\n    })\n\n    balanceAmount = incomeAmount - expensesAmount\n\n    return balanceAmount\n  }\n\n  render() {\n    const {titleInput, amountInput, optionId, transactionsList} = this.state\n    const balanceAmount = this.calculateBalance()\n    const incomeAmount = this.calculateIncome()\n    const expensesAmount = this.calculateExpenses()\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"responsive-container\">\n          <div className=\"header-container\">\n            <h1 className=\"heading\">Hi, Navin.</h1>\n            <p className=\"header-content\">\n              Welcome back to your\n              <span className=\"money-manager-text\"> Money Manager</span>\n            </p>\n          </div>\n          <MoneyDetails\n            balanceAmount={balanceAmount}\n            incomeAmount={incomeAmount}\n            expensesAmount={expensesAmount}\n          />\n          <div className=\"transaction-details\">\n            <form\n              className=\"contact-form-container\"\n              onSubmit={this.onAddTransaction}\n            >\n              <h1 className=\"transaction-header\">Add Transaction</h1>\n              <label className=\"input-label\" htmlFor=\"title\">\n                TITLE\n              </label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={titleInput}\n                onChange={this.onChangeTitleInput}\n                className=\"input\"\n                placeholder=\"TITLE\"\n              />\n              <label className=\"input-label\" htmlFor=\"amount\">\n                AMOUNT\n              </label>\n              <input\n                type=\"text\"\n                id=\"amount\"\n                className=\"input\"\n                value={amountInput}\n                onChange={this.onChangeAmountInput}\n                placeholder=\"AMOUNT\"\n              />\n              <label className=\"input-label\" htmlFor=\"select\">\n                TYPE\n              </label>\n              <select\n                id=\"select\"\n                className=\"input\"\n                value={optionId}\n                onChange={this.onChangeOptionID}\n              >\n                {transactionTypeOptions.map(eachOption => (\n                  <option key={eachOption.optionId} value={eachOption.optionId}>\n                    {eachOption.displayText}\n                  </option>\n                ))}\n              </select>\n              <button type=\"submit\" className=\"button\">\n                Add\n              </button>\n            </form>\n            <div className=\"history-transactions\">\n              <h1 className=\"transaction-header\">History</h1>\n              <div className=\"transactions-table-container\">\n                <ul className=\"transactions-table\">\n                  <li className=\"table-header\">\n                    <p className=\"table-header-cell\">Title</p>\n                    <p className=\"table-header-cell\">Amount</p>\n                    <p className=\"table-header-cell\">Type</p>\n                  </li>\n                  {transactionsList.map(eachTransaction => (\n                    <TransactionItem\n                      key={eachTransaction.id}\n                      transactionDetails={eachTransaction}\n                      deleteTransaction={this.deleteTransaction}\n                    />\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MoneyManager\n","import MoneyManager from './components/MoneyManager'\nimport './App.css'\n\nconst App = () => <MoneyManager />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}